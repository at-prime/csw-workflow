name: Cisco SecureWorkload TF flow

on:
  
  workflow_call:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      tfpath:
        description: 'TF File Path'     
        required: false
        default: 'terraform-template/csw'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tf_code_check:
    name: Terraform Validation and Build
    runs-on: ubuntu-latest

    if:  ${{ inputs.tfpath }} 
    steps:
    - name: Checkout tf code in runner environment
      uses: actions/checkout@v3.5.2

    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2

    - name: Terraform init and validate
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        echo "** Running Terraform Init**"
        terraform init
        
        echo "** Running Terraform Validate**"
        terraform validate
      working-directory: ${{ github.event.inputs.tfpath }}
    - name: Terraform plan and apply
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"        
        echo "** Running Terraform Plan**"
        terraform plan -var="api_key=${{ secrets.TF_VAR_API_KEY }}" -var="api_secret=${{ secrets.TF_VAR_API_SECRET }}" -var="api_url=${{ secrets.TF_VAR_API_URL }}"
        
        echo "** Running Terraform Apply**"
        terraform apply -auto-approve  -var="api_key=${{ secrets.TF_VAR_API_KEY }}" -var="api_secret=${{ secrets.TF_VAR_API_SECRET }}" -var="api_url=${{ secrets.TF_VAR_API_URL }}"
      working-directory: ${{ github.event.inputs.tfpath }}

    - name: Terraform Destroy
      run: |
        echo "** Running Terraform Destroy**"
        terraform destroy -auto-approve
      working-directory: ${{ github.event.inputs.tfpath }}